{"version":3,"sources":["components/Statistics.js","utils/index.js","config/index.js","utils/isEmpty/isEmpty.mjs","components/table/Table.js","index.js"],"names":["Statistics","props","className","Object","keys","header","map","item","i","body","math","object","value","k","freq","mode","has","get","max","set","size","clear","key","sum","mean","count","id","lost","delta","median","sum_x2","mean_x2","stdDev","Math","sqrt","config","SOCKET_URL","STATIC_OPTIONS","share","shouldReconnect","STATISTIC","performance","BUTTON","connection","statistic","aside","button","table","assetId","timestamp","description","name","proofs","sender","footer","prototype","hasOwnProperty","toString","isEmpty","val","length","Array","isArray","Error","message","call","Table","bodyRef","useRef","inputRef","modalRef","modalSectionRef","useState","data","setData","useEffect","window","sessionStorage","forEach","libCrypto","setItem","JSON","stringify","values","parse","cleanModal","inputs","current","querySelectorAll","searchClick","events","items","input","filter","indexOf","clickEffect","activeClass","classList","add","setTimeout","remove","tableVisual","even","odd","style","background","eventsAside","a","currentTarget","console","log","eventsClick","content","target","contains","parentNode","navigator","clipboard","writeText","querySelector","textContent","ref","method","htmlFor","type","onClick","close","newData","Date","toLocaleString","timeZone","showModal","index","Fragment","split","onChange","handleClick","event","WebSocket","currentSocketUrl","setCurrentSocketUrl","currentStatistic","setCurrentStatistic","Map","messageHistory","setMessageHistory","useWebSocket","lastMessage","readyState","prev","readyStateString","disabled","t0","now","out","t1","toFixed","render","document","getElementById"],"mappings":"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","file":"static/js/main.36d96d28.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Statistics(props) {\n    return(\n        <div className={\"statistic\"}>\n            <div className={\"statistic__header\"}>\n                {Object.keys(props.header).map(function(item, i) {\n                    return <div className={`statistic__header-item`} key= { i }>{ props.header[item] }</div>;\n                })}\n            </div>\n            <div className={\"statistic__body\"}>\n                {\n                    (props.body)\n                        ? (Object.keys(props.body).map(function(item, i) {\n                            return <div className={`statistic__body-item`} key= { i }>{ props.body[item] }</div>;\n                        }))\n                        : ''\n                }\n            </div>\n        </div>\n    );\n}\n\nexport { Statistics }","const mode = (object, value, k = 1000000) => {\n    let freq = object.mode.map.has(value)\n        ? object.mode.map.get(value)\n        : 0;\n    freq++;\n    if(freq > object.mode.max) {\n        object.mode.max = freq\n        object.mode.value = value\n    }\n    object.mode.map.set(value, freq);\n    if(object.mode.map.size === k) {\n        object.mode.map.clear()\n    }\n    return {\n        key: object.mode.max,\n        value: object.mode.value\n    }\n};\n\nlet mean = (object, value) => {\n    object.sum = object.sum + value\n    return object.mean = object.sum / object.count\n};\n\nconst lost = (object, id) => {\n    object.lost = (object.id === 0)\n        ? 0\n        : (object.lost + id - (object.id + 1))\n    object.id = id\n    return object.lost\n};\n\n//https://habr.com/ru/post/228575/\nconst median = (object, value) => {\n    let delta = object.sum / object.count / object.count ; // delta = average/count\n    if(value < object.median) {\n        object.median -= delta\n    } else {\n        object.median += delta\n    }\n    return object.median\n};\n\n//https://coderoad.ru/15638612/%D0%B2%D1%8B%D1%87%D0%B8%D1%81%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D1%81%D1%80%D0%B5%D0%B4%D0%BD%D0%B5%D0%B3%D0%BE-%D0%B8-%D1%81%D1%82%D0%B0%D0%BD%D0%B4%D0%B0%D1%80%D1%82%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BE%D1%82%D0%BA%D0%BB%D0%BE%D0%BD%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B5-%D0%BD%D0%B5-%D0%BF%D0%BE%D0%BC%D0%B5%D1%89%D0%B0%D1%8E%D1%82%D1%81%D1%8F-%D0%B2\n//https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance#Welford.27s_online_algorithm\nconst stdDev = (object, value) => {\n    object.sum_x2 = object.sum_x2 + value**2\n    object.mean_x2 = object.sum_x2 / object.count\n    object.stdDev = Math.sqrt(object.mean_x2 - object.mean**2)\n    return object.stdDev\n};\n\nexport const math =  {\n    mode: mode,\n    mean: mean,\n    lost: lost,\n    median: median,\n    stdDev: stdDev,\n};","export let config = {\n    SOCKET_URL: 'wss://trade.trademux.net:8800/?password=1234',\n    STATIC_OPTIONS: {\n        share: true,\n        shouldReconnect: () => true,\n    },\n    STATISTIC: {\n        mode: \"Мода\",\n        mean: \"cреднее\",\n        lost: \"Потерянные\",\n        median: \"Медиана\",\n        stdDev: \"стандартное отклонение\",\n        performance: \"время расчётов (mc)\"\n    },\n    BUTTON: {\n        connection: \"connection\",\n        statistic: \"statistic\"\n    },\n    aside: {\n        button: [\n          \"odd rows of data\",\n          \"even rows of data\",\n          \"all data\"\n        ]\n    },\n    table: {\n        header: [\n            \"data\",\n            \"Summary 1\",\n            \"Summary 2\",\n            \"Summary 3\",\n            \"Summary 4\",\n            \"Summary 5\",\n        ],\n        body: [\n            {\n                assetId: 1,\n                timestamp: 999888877777,\n                description: 'description',\n                name: 'Name',\n                proofs: 'Proofs',\n                sender: 'sender'\n            },{\n                assetId: 2,\n                timestamp: 21312312,\n                description: 'description ccvvvbn',\n                name: 'Name',\n                proofs: 'Proofs',\n                sender: 'sender'\n            },{\n                assetId: 3,\n                timestamp: 21312312,\n                description: 'description dssss',\n                name: 'Name',\n                proofs: 'Proofs',\n                sender: 'sender'\n            },{\n                assetId: 41112222,\n                timestamp: 222222222,\n                description: 'description rdaasfu',\n                name: 'Name',\n                proofs: 'Proofs',\n                sender: 'sender'\n            },{\n                assetId: 5444222,\n                timestamp: 21312312,\n                description: 'description pppzzzzz',\n                name: 'Name',\n                proofs: '22',\n                sender: 'sender'\n            },{\n                assetId: 'asfasfeqefq',\n                timestamp: 21312312,\n                description: 'description',\n                name: 'Name',\n                proofs: 'Proofs',\n                sender: 'sender'\n            },\n        ],\n        footer: [\n            \"assetId\",\n            \"timestamp\",\n            \"description\",\n            \"name\",\n            \"proofs\",\n            \"sender\"\n        ]\n    }\n}","let has = Object.prototype.hasOwnProperty\nlet toString = Object.prototype.toString\n\nfunction isEmpty(val) {\n    // Null and Undefined...\n    if (val == null) return true\n\n    // Booleans...\n    if ('boolean' == typeof val) return false\n\n    // Numbers...\n    if ('number' == typeof val) return val === 0\n\n    // Strings...\n    if ('string' == typeof val) return val.length === 0\n\n    // Functions...\n    if ('function' == typeof val) return val.length === 0\n\n    // Arrays...\n    if (Array.isArray(val)) {\n        let object = val instanceof Object\n        if(object) {\n            return Object.keys(val).length === 0\n        } else {\n            return val.length === 0\n        }\n    }\n\n    // Errors...\n    if (val instanceof Error) return val.message === ''\n\n    // Objects...\n    if (val.toString == toString) {\n        switch (val.toString()) {\n\n            // Maps, Sets, Files and Errors...\n            case '[object File]':\n            case '[object Map]':\n            case '[object Set]': {\n                return val.size === 0\n            }\n\n            // Plain objects...\n            case '[object Object]': {\n                for (var key in val) {\n                    if (has.call(val, key)) return false\n                }\n\n                return true\n            }\n        }\n    }\n   \n    // Anything else...\n    return false\n}\n\nexport default isEmpty","import React, {useEffect, useState, useRef} from \"react\";\nimport { config } from '../../config/index'\nimport * as libCrypto from '@waves/ts-lib-crypto'\nimport isEmpty from '../../utils/isEmpty/isEmpty.mjs'\nimport template from '../../template/index.mjs'\n\nfunction Table(props) {\n  const bodyRef = useRef(null);\n  const inputRef = useRef(null);\n  const modalRef = useRef(null);\n  const modalSectionRef = useRef(null);\n  const [data, setData]=useState([])\n\n  useEffect(() => {\n    window.sessionStorage.clear();\n    config.table.body.forEach(item => {\n      const id = libCrypto.privateKey(libCrypto.randomSeed())\n      window.sessionStorage.setItem(id, JSON.stringify(item));\n    })\n    setData(Object.values(window.sessionStorage).map(item => JSON.parse(item)))\n  },[]);\n\n  const showModal = (events) => {\n    modalRef.current.showModal();\n  }\n\n  const cleanModal = () => {\n    let inputs = modalSectionRef.current.querySelectorAll('input')\n    for(let item of inputs) {\n      item.value = ''\n    }\n  }\n\n  const closeModal = (events) => {\n    cleanModal()\n    modalRef.current.close();\n  }\n\n  const saveItem = (events) => {\n    let inputs = modalSectionRef.current.querySelectorAll('input')\n    const id = libCrypto.privateKey(libCrypto.randomSeed())\n    let newData = {}\n    for(let item of inputs) {\n      newData[item.name] = item.value\n    }\n    window.sessionStorage.setItem(id, JSON.stringify(newData));\n    cleanModal()\n    modalRef.current.close();\n    setData(Object.values(window.sessionStorage).map(item => JSON.parse(item)))\n  }\n\n  const searchClick = (events) => {\n    const inputs = inputRef.current.querySelectorAll('input')\n    let items = Object.values(window.sessionStorage).map(item => JSON.parse(item))\n    for(let input of inputs) {\n      if(!isEmpty(input.value)) {\n        items = items.filter(item => item[input.name].toString().indexOf(input.value.toString()) !== -1)\n      }\n    }\n    setData(items)\n  }\n\n  const clickEffect = (item) => {\n    const activeClass = 'auction-data__active'\n    item.classList.add(activeClass)\n    setTimeout(() => {\n      item.classList.remove(activeClass)\n    },140)\n  }\n\n  const tableVisual = (even, odd) => {\n    const items = bodyRef.current.querySelectorAll('.auction-data__table_body_tr')\n    for(let i = 0 ; i < items.length; i++ ) {\n      if(i % 2) {\n        for(let item of items[i].querySelectorAll('.auction-data__table_body_td')) {\n          item.style.background = even\n        }\n      } else {\n        for(let item of items[i].querySelectorAll('.auction-data__table_body_td')) {\n          item.style.background = odd\n        }\n      }\n    }\n  }\n\n  const eventsAside = async (events) => {\n    switch (events.currentTarget.name) {\n      case 'even':\n        tableVisual('#859d85', 'white')\n        break\n      case 'odd':\n        tableVisual('white', '#859d85')\n        break\n      case 'all':\n        tableVisual('white', 'white')\n        break\n      default:\n        console.log('default router', events.currentTarget.name)\n        break\n    }\n  }\n\n  const eventsClick = async (events) => {\n    let content = events.target.classList\n\n    if(!content.contains('auction-data__table_body_tr')\n      && !content.contains('auction-data__table_body')\n      && !content.contains('auction-data__table')\n      && !content.contains('auction-data')) {\n      const item = (events.target.classList.contains('auction-data__table_body_td'))\n        ? events.target\n        : events.target.parentNode\n      clickEffect(item)\n      await navigator.clipboard.writeText(item.querySelector('span').textContent)\n    }\n  }\n\n  return (\n    <div className=\"auction-data\">\n      <dialog ref={modalRef}>\n        <div method=\"auction-data__dialog\">\n          <section\n            ref={modalSectionRef}\n            className=\"auction-data__dialog_section\"\n          >\n            <label htmlFor=\"modal_assetId\">assetId</label>\n            <input name=\"assetId\" id=\"modal_assetId\" type=\"text\"/>\n\n            <label htmlFor=\"modal_timestamp\">timestamp</label>\n            <input name=\"timestamp\" id=\"modal_timestamp\" type=\"text\"/>\n\n            <label htmlFor=\"modal_description\">description</label>\n            <input name=\"description\" id=\"modal_description\" type=\"text\"/>\n\n            <label htmlFor=\"modal_name\">name</label>\n            <input name=\"name\" id=\"modal_name\" type=\"text\"/>\n\n            <label htmlFor=\"modal_proofs\">proofs</label>\n            <input name=\"proofs\" id=\"modal_proofs\" type=\"text\"/>\n\n            <label htmlFor=\"modal_sender\">sender</label>\n            <input name=\"sender\" id=\"modal_sender\" type=\"text\"/>\n          </section>\n          <menu\n            className=\"auction-data__dialog_menu\"\n          >\n            <button\n              onClick={closeModal}\n              className=\"auction-data__dialog_menu_close\"\n              type=\"reset\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={saveItem}\n              className=\"auction-data__dialog_menu_save\"\n              type=\"button\"\n            >\n              Save\n            </button>\n          </menu>\n        </div>\n      </dialog>\n      <div className=\"auction-data__header_date\">{new Date().toLocaleString(\"en-US\", {timeZone: \"Europe/Moscow\"})}</div>\n      <input\n        onClick={showModal}\n        type=\"button\"\n        value=\"Create New\"\n        className={'auction-data__header_button'}\n      />\n      <div className=\"auction-data__nav\">\n        {config.aside.button.map((item, index) => (\n          <React.Fragment key={index}>\n            <input\n              type=\"button\"\n              value={item}\n              name={item.split(' ')[0]}\n              className={`auction-data__aside_button`}\n              onClick={eventsAside}\n            />\n          </React.Fragment>\n        ))}\n      </div>\n      <div className=\"auction-data__table\">\n        <div className=\"auction-data__table_header\">\n          {config.table.header.map((item, index) => (\n            <React.Fragment key={index}>\n              <div className=\"auction-data__table_header_td\">{item}</div>\n            </React.Fragment>\n          ))}\n        </div>\n        <div className=\"auction-data__table_body\" ref={bodyRef}>\n          {data.map((item, index) => (\n            <React.Fragment key={index}>\n              <div className=\"auction-data__table_body_tr\">\n                {Object.keys(item).map((key, index) => (\n                  <React.Fragment key={index}>\n                    <div className={`auction-data__table_body_td ${key}`}>\n                      <span\n                        onClick={eventsClick}>{item[key]}\n                      </span>\n                    </div>\n                  </React.Fragment>\n                ))}\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n        <div ref={inputRef} className=\"auction-data__table_footer\">\n          {config.table.footer.map((item, index) => (\n            <React.Fragment key={index}>\n              <input\n                onChange={searchClick}\n                className=\"auction-data__table_footer_td\"\n                name={item}\n              />\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Table }","import React, { useState, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport useWebSocket from 'react-use-websocket';\nimport { Statistics } from './components/Statistics'\nimport { math } from './utils/index'\nimport { config } from './config'\nimport './css/index.css';\nimport { Table } from './components/table/Table'\n\nconst handleClick = event => {\n    event.target.classList.add('active');\n    setTimeout(() => {\n        event.target.classList.remove('active');\n    }, 1500);\n}\n\nexport const WebSocket = () => {\n    const [currentSocketUrl, setCurrentSocketUrl] = useState(null);\n    const [currentStatistic, setCurrentStatistic] = useState(null);\n    const [messageHistory, setMessageHistory] = useState({\n        id: 0,\n        count: 0,\n        mean: 0,\n        stdDev: 0,\n        sum: 0,\n        sum_x2: 0,\n        mean_x2: 0,\n        median: 0,\n        lost: 0,\n        mode: {\n            map: new Map(),\n            max: 0,\n            value: 0,\n        }\n    });\n\n    let statistic = () => {\n        let t0 = performance.now();\n        const out = {\n            mode: messageHistory.mode.value,\n            mean: messageHistory.mean,\n            lost: messageHistory.lost,\n            median: messageHistory.median,\n            stdDev: messageHistory.stdDev,\n            performance: 0\n        }\n        let t1 = performance.now();\n        out.performance = (t1 - t0).toFixed(3)\n        return setCurrentStatistic(out)\n    };\n\n    const {\n        lastMessage,\n        readyState,\n    } = useWebSocket(currentSocketUrl, config.STATIC_OPTIONS);\n\n    useEffect(() => {\n        lastMessage && setMessageHistory(prev => {\n            prev.count++\n            let object = JSON.parse(lastMessage.data)\n            math.lost(prev, object.id)\n            math.mean(prev, object.value)\n            math.median(prev, object.value)\n            math.stdDev(prev, object.value)\n            math.mode(prev, object.value)\n            return prev\n        });\n    }, [lastMessage]);\n\n    const readyStateString = {\n        0: 'CONNECTING', 1: 'OPEN', 2: 'CLOSING', 3: 'CLOSED',\n    }[readyState];\n\n    return (\n        <div className={'-app'}>\n            <Table></Table>\n            <hr/>\n            <h4 className={'-app__title'}>ReadyState: {readyStateString}</h4>\n            <div className={'-app__control'}>\n                <button\n                    className={'-app__control-button'}\n                    onClick={(events) => {\n                        handleClick(events);\n                        setCurrentSocketUrl(config.SOCKET_URL);\n                    }}\n                    disabled={currentSocketUrl === config.SOCKET_URL}\n                >\n                    { config.BUTTON.connection }\n                </button>\n                <button\n                    className={'-app__control-button'}\n                    onClick={(events) => {\n                            handleClick(events)\n                            statistic()\n                        }\n                    }\n                >\n                    { config.BUTTON.statistic }\n                </button>\n            </div>\n            <div className={'-app__connection'}>\n                <Statistics\n                    header={ config.STATISTIC }\n                    body={ currentStatistic }\n                />\n            </div>\n        </div>\n    );\n};\n\nrender( <WebSocket />, document.getElementById('root') );\n"],"sourceRoot":""}